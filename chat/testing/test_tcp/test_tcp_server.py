import socket

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
# в конструктор передается константа 4-й версии ip и константа, говорящая о том, что мы используем
#сокет TCP протокола
sock.bind(('localhost', 8080))
sock.listen(5)#Указывает размер очереди, т.е. сколько соединений (клиентов) будет слушаться
while True:
    try:
        client, address = sock.accept()#метод, принимающий соединение
#метод смотрит в очередь и проверяет наличие в ней клиентов, которые установили соединение с сервером
#и собираются обмениваться данными
#после проверки он вытаскивает клиента из очереди или ожидает клиента, если очередь пуста
#метод accept возвращает кортеж их двух элементов: клиентский сокет (экземпляр класса сокет на стороне клиента)
# и его ip с портом
#подключается клиент и потом передается в метод recv для чтения и записи.
# Работа идет с клиентом, а не просто с сокетом как в UDP.
    except KeyboardInterrupt:
        sock.close()
        break
    else:
        result = client.recv(1024)#используем client как обычный сокет
#пытаемся из него прочитать сообщение
        client.close()
        print('Message', result)